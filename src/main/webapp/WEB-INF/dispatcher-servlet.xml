<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing 
        infrastructure -->
 


    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />
      
    <resources mapping ="/images/**" location="/images/"/>  
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/resources directory -->
 <context:component-scan base-package="com"/>  
   
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
        in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
 
 <beans:bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">  
 <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"></beans:property>  
 <beans:property name="url" value="jdbc:mysql://localhost:3306/smacrs-mse2015"></beans:property>  
 <beans:property name="username" value="root"></beans:property>  
 <beans:property name="password" value="root"></beans:property>  
</beans:bean>  

<!-- 
<bean id="dbDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="java:comp/env/jdbc/DatabaseName"/>
</bean>
 -->


  <!-- Add JPA support -->
  <beans:bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<!--      <beans:property name="persistenceUnitName" value="GuestbookPU"></beans:property> -->
       <beans:property name="dataSource" ref="dataSource"></beans:property>  
     
<!--      <beans:property name="loadTimeWeaver">   -->
<!--         <beans:bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>   -->
<!--       </beans:property>  -->
  </beans:bean>
 
  <!-- Add Transaction support -->
  <beans:bean id="myTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="emf"/>
  </beans:bean>
 
  <!-- Use @Transaction annotations for managing transactions -->
  <tx:annotation-driven transaction-manager="myTxManager" />
 


  
<!-- <beans:bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">   -->
<!--  <beans:property name="dataSource" ref="dataSource"></beans:property> -->
<!--  <beans:property name="packagesToScan" value="com.active.mode"/>   -->
<!--  <beans:property name="annotatedClasses">   -->
<!--   <beans:list>   -->
<!--    <beans:value>com.active.model.Profile</beans:value>   -->
<!--    <beans:value>com.active.model.User</beans:value>   -->
<!--    <beans:value>com.active.model.Role</beans:value>   -->
<!--   </beans:list>   -->
<!--  </beans:property>   -->
<!--  <beans:property name="hibernateProperties">   -->
<!--  <beans:props>   -->
<!--   <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>   -->
<!--   <beans:prop key="hibernate.show_sql">true</beans:prop>   -->
<!--   <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>       -->
<!--  </beans:props>   -->
<!--  </beans:property>   -->
<!-- </beans:bean>   -->
   
</beans:beans>